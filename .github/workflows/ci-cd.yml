name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, development ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: test_db
          JWT_ACCESS_SECRET: test_access_secret
          JWT_REFRESH_SECRET: test_refresh_secret

  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Deploy to staging
        run: echo "Deploying to staging environment... This is a placeholder for your actual deployment script"
        # Uncomment and modify these lines for actual deployment
        # - name: Set up Docker Buildx
        #   uses: docker/setup-buildx-action@v2
        #
        # - name: Login to Docker Registry
        #   uses: docker/login-action@v2
        #   with:
        #     registry: your-registry
        #     username: ${{ secrets.DOCKER_USERNAME }}
        #     password: ${{ secrets.DOCKER_PASSWORD }}
        #
        # - name: Build and push
        #   uses: docker/build-push-action@v4
        #   with:
        #     context: .
        #     push: true
        #     tags: your-registry/url-shortener:staging

  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Deploy to production
        run: echo "Deploying to production environment... This is a placeholder for your actual deployment script"
        # Uncomment and modify these lines for actual deployment
        # - name: Set up Docker Buildx
        #   uses: docker/setup-buildx-action@v2
        #
        # - name: Login to Docker Registry
        #   uses: docker/login-action@v2
        #   with:
        #     registry: your-registry
        #     username: ${{ secrets.DOCKER_USERNAME }}
        #     password: ${{ secrets.DOCKER_PASSWORD }}
        #
        # - name: Build and push
        #   uses: docker/build-push-action@v4
        #   with:
        #     context: .
        #     push: true
        #     tags: your-registry/url-shortener:production 